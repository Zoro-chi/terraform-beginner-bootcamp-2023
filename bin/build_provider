#! /usr/bin/env bash

# PLUGIN_DIR="/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/"
# PLUGIN_NAME="terraform-provider-terratowns_v1.0.0"
# PROJECT_ROOT="/Users/zoro/Desktop/JR/Projects/terraform-beginner-bootcamp-2023"

# # https://servian.dev/terraform-local-providers-and-registry-mirror-configuration-b963117dfffa
# cd $PROJECT_ROOT/terraform-provider-terratowns
# cp "$PROJECT_ROOT/terraformrc" "$PROJECT_ROOT/.terraformrc"
# rm -rf /.terraform.d/plugins
# rm -rf $PROJECT_ROOT/.terraform
# rm -rf $PROJECT_ROOT/.terraform.lock.hcl
# go build -o $PLUGIN_NAME
# mkdir -p "$PROJECT_ROOT/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/x86_64/"
# mkdir -p "$PROJECT_ROOT/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/linux_amd64/"
# cp "$PLUGIN_NAME" "$PROJECT_ROOT/$PLUGIN_DIR/x86_64/"
# cp "$PLUGIN_NAME" "$PROJECT_ROOT/$PLUGIN_DIR/linux_amd64/"


PLUGIN_NAME="terraform-provider-terratowns_v1.0.0"
PLUGIN_DIR=".terraform.d/plugins/local.providers/local/terratowns/1.0.0"
PROJECT_ROOT="/Users/zoro/Desktop/JR/Projects/terraform-beginner-bootcamp-2023"

# Move to the project root
cd "$PROJECT_ROOT/terraform-provider-terratowns" || exit 1

# Copy the .terraformrc file
cp "$PROJECT_ROOT/terraformrc" "$PROJECT_ROOT/.terraformrc"

# Remove existing Terraform directories and files
rm -rf "$PROJECT_ROOT/.terraform.d/plugins"
rm -rf "$PROJECT_ROOT/.terraform"
rm -rf "$PROJECT_ROOT/.terraform.lock.hcl"

# Build the Go binary
go build -o "$PLUGIN_NAME" || exit 1

# Create directories in the project root
mkdir -p "$PROJECT_ROOT/$PLUGIN_DIR/x86_64/"
mkdir -p "$PROJECT_ROOT/$PLUGIN_DIR/linux_amd64/"
mkdir -p "$PROJECT_ROOT/$PLUGIN_DIR/darwin_arm64/"

# Copy the binary to the project root directories
cp "$PLUGIN_NAME" "$PROJECT_ROOT/$PLUGIN_DIR/x86_64/"
cp "$PLUGIN_NAME" "$PROJECT_ROOT/$PLUGIN_DIR/linux_amd64/"
cp "$PLUGIN_NAME" "$PROJECT_ROOT/$PLUGIN_DIR/darwin_arm64/"

# Move to the home directory
cd ~ || exit 1

# Create directories in the home directory
mkdir -p ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/x86_64/
mkdir -p ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/linux_amd64/
mkdir -p ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/darwin_arm64/

# Copy the binary to the home directory directories
cp "$PROJECT_ROOT/$PLUGIN_DIR/x86_64/$PLUGIN_NAME" ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/x86_64/
cp "$PROJECT_ROOT/$PLUGIN_DIR/linux_amd64/$PLUGIN_NAME" ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/linux_amd64/
cp "$PROJECT_ROOT/$PLUGIN_DIR/linux_amd64/$PLUGIN_NAME" ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/darwin_arm64/

# Verify that the binary exists in the destination directories
if [ ! -f ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/x86_64/"$PLUGIN_NAME" ]; then
  echo "Error: Binary not found in ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/x86_64/"
  exit 1
fi

if [ ! -f ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/linux_amd64/"$PLUGIN_NAME" ]; then
  echo "Error: Binary not found in ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/linux_amd64/"
  exit 1
fi

if [ ! -f ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/linux_amd64/"$PLUGIN_NAME" ]; then
  echo "Error: Binary not found in ~/.terraform.d/plugins/local.providers/local/terratowns/1.0.0/darwin_arm64/"
  exit 1
fi

echo "Plugin installation successful."